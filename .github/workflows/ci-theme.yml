name: ci-theme

on:
  workflow_call:
    inputs:
      NODE_VERSION:
        type: number
        default: 14
        required: false
      PHP_VERSION:
        type: number
        default: 7.4
        required: false
      THEME_NAME:
        type: string
        required: false
    secrets:
      FONTAWESOME_NPM_AUTH_TOKEN:
        required: false

jobs:
  check-theme-changes:
    if: ${{ inputs.THEME_NAME != '' && inputs.THEME_NAME != 'xxxTHEME_NAMExxx' }}
    runs-on: ubuntu-latest
    outputs:
      THEME_CHANGED: ${{ steps.diff.outputs.THEME_CHANGED }}
    steps:
      - uses: actions/checkout@v2

      - id: diff
        run: |
          git fetch --no-tags --prune --depth=1 origin ${{ github.event.repository.default_branch }}
          CHANGED_FILES=$(git diff origin/${{ github.event.repository.default_branch }} HEAD --name-only --diff-filter=ACMRT web/app/themes/${{ inputs.THEME_NAME }} || echo '')
          FILES_CHANGED=$([ -z $CHANGED_FILES ] && echo 'false' || echo 'true')
          echo "::set-output name=THEME_CHANGED::$FILES_CHANGED"

  check-if-has-build-command:
    if: ${{ inputs.THEME_NAME != '' && inputs.THEME_NAME != 'xxxTHEME_NAMExxx' }}
    runs-on: ubuntu-latest
    outputs:
      HAS_BUILD_COMMAND: ${{ steps.has-build-cmd.outputs.HAS_BUILD_COMMAND }}
    steps:
      - uses: actions/checkout@v2

      - id: has-build-cmd
        run: |
          HAS_BUILD_COMMAND=$(grep '"build": "[^"]*' web/app/themes/${{ inputs.THEME_NAME }}/package.json && echo 'true' || echo 'false')
          echo "::set-output name=HAS_BUILD_COMMAND::$HAS_BUILD_COMMAND"

  node:
    name: build-production-assets
    needs: [check-theme-changes, check-if-has-build-command]
    if: ${{ needs.check-theme-changes.outputs.THEME_CHANGED == 'true' && needs.check-if-has-build-command.outputs.HAS_BUILD_COMMAND == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/app/themes/${{ inputs.THEME_NAME }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node ${{ inputs.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.NODE_VERSION }}

      - name: Restore Yarn cache
        id: yarncache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarncache.outputs.dir }}
          key: ${{ runner.os }}-${{ inputs.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ inputs.NODE_VERSION }}-yarn-

      - name: Install dependencies with Yarn
        working-directory: web/app/themes/${{ inputs.THEME_NAME }}
        run: yarn install --frozen-lockfile
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: Build and compile assets
        run: yarn build:production
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

  php:
    name: php-style-check
    needs: check-theme-changes
    if: ${{ needs.check-theme-changes.outputs.THEME_CHANGED == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/app/themes/${{ inputs.THEME_NAME }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP ${{ inputs.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.PHP_VERSION }}
          coverage: xdebug
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore Composer cache
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-${{ inputs.PHP_VERSION }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ inputs.PHP_VERSION }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - run: composer run-script style:check
