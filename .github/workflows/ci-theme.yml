name: ci-theme

on:
  workflow_call:
    inputs:
      PHP_VERSION:
        type: number
        default: 7.4
        required: false
      THEME_NAME:
        type: string
        required: false
      NPM_BUILD_CMD:
        type: string
        default: yarn build:production
        required: false
    secrets:
      FONTAWESOME_NPM_AUTH_TOKEN:
        required: false
      PRIVATE_PACKAGIST_TOKEN:
        required: false

jobs:
  check-theme-changes:
    if: ${{ inputs.THEME_NAME != '' && inputs.THEME_NAME != 'xxxTHEME_NAMExxx' }}
    runs-on: ubuntu-latest
    outputs:
      THEME_CHANGED: ${{ steps.diff.outputs.THEME_CHANGED }}
    steps:
      - uses: actions/checkout@v3

      - id: diff
        run: |
          git fetch --no-tags --prune --depth=1 origin ${{ github.event.repository.default_branch }}
          CHANGED_FILES=$(git diff origin/${{ github.event.repository.default_branch }} HEAD --name-only --diff-filter=ACMRT web/app/themes/${{ inputs.THEME_NAME }} || echo '')
          FILES_CHANGED=$([ -z ${CHANGED_FILES} ] && echo 'false' || echo 'true')
          echo "THEME_CHANGED=${FILES_CHANGED}" >> "${GITHUB_OUTPUT}"

  node:
    name: build-production-assets
    needs: check-theme-changes
    if: ${{ needs.check-theme-changes.outputs.THEME_CHANGED == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/app/themes/${{ inputs.THEME_NAME }}
    steps:
      - uses: actions/checkout@v3

      - id: setup-node
        name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: "web/app/themes/${{ inputs.THEME_NAME }}/.nvmrc"

      - name: Restore Yarn cache
        id: yarncache
        run: echo "dir=$(yarn cache dir)" >> "${GITHUB_OUTPUT}"
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarncache.outputs.dir }}
          key: ${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-yarn-

      - name: Install dependencies with Yarn
        working-directory: web/app/themes/${{ inputs.THEME_NAME }}
        run: yarn install --frozen-lockfile
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: Build and compile assets
        run: ${{ inputs.NPM_BUILD_CMD }}
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

  php:
    name: php-style-check
    needs: check-theme-changes
    if: ${{ needs.check-theme-changes.outputs.THEME_CHANGED == 'true' }}
    runs-on: ubuntu-latest
    env:
      PRIVATE_PACKAGIST_TOKEN: ${{ secrets.PRIVATE_PACKAGIST_TOKEN }}
    defaults:
      run:
        working-directory: web/app/themes/${{ inputs.THEME_NAME }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP ${{ inputs.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.PHP_VERSION }}
          coverage: xdebug
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore Composer cache
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> "${GITHUB_OUTPUT}"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-${{ inputs.PHP_VERSION }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ inputs.PHP_VERSION }}-composer-

      - if: ${{ env.PRIVATE_PACKAGIST_TOKEN != '' }}
        name: Setup Composer Private Packagist authentication
        run: composer config --global --auth http-basic.repo.packagist.com itineris ${{ env.PRIVATE_PACKAGIST_TOKEN }}

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - run: composer run-script style:check
